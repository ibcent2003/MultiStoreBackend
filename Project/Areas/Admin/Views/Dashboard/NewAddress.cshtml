@model Project.Areas.Admin.Models.DashboardViewModel
@{
    ViewBag.Title = Model.store.Name + " New Address";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.IsGreetings = "true";
}


@section Crumbs{
    <div class="crumbs">

        <ul class="breadcrumb" id="breadcrumbs">
            <li><i class="icon-home"></i><a href="@Url.Action("Index", "Home", new { area = "Admin" })">Dashboard</a> </li>
            <li><i class="current"></i><a href="javascript: return void(0)">@Model.store.Name  New Address</a> </li>


        </ul>
    </div>
}
  <div class="row">
    <div class="col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4>
                    <i class="icon-reorder"></i>
                    New Contact Address

                </h4>
            </div>
            <div class="widget-content">
                @using (Html.BeginForm("NewAddress", "Dashboard", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal row-border" }))
                {
                    @Html.HiddenFor(x => x.store.ProcessInstaceId)
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.Label("Address Type", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.addressform.AddressTypeId, new SelectList(Model.AddressTypeList, "Value", "Text"), "Select address type", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.addressform.AddressTypeId, null, new { @style = "color:red" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Street Name", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.addressform.Street, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.addressform.Street, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("State", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.StateId, new SelectList(Model.StateList, "Value", "Text"), new { @class = "form-control", onChange = "GetAllLGA(this)" })
                            @Html.ValidationMessageFor(model => model.StateId, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("LGA", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.addressform.LgaId, new SelectList(Model.LgaList, "Value", "Text"), "select One", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.addressform.LgaId, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Mobile No", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.addressform.MobileNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.addressform.MobileNumber, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Email Address", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.addressform.EmailAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.addressform.EmailAddress, null, new { @style = "color:red" })

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Google Map URL", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.addressform.GoogleMap, new { @class = "form-control" })                           
                        </div>
                    </div>

                    <div class="form-actions">
                        <a href="@Url.Action("AddressList", "Dashboard", new {Id=Model.store.ProcessInstaceId, area="Admin"})" class="btn btn-success btn-xs"><< Back to List </a>
                        <input type="submit" class="btn btn-warning btn-xs pull-right" value="Save" />
                    </div>
                }
            </div>

        </div>
    </div>
</div>


@section Scripts{
    @Scripts.Render("~/Content/Backend/plugins/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/tabletools/TableTools.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/colvis/ColVis.min.js")
    @Scripts.Render("~/Content/Backend/plugins/datatables/DT_bootstrap.js")
    @Scripts.Render("~/Content/Backend/plugins/jquery-ui/jquery-ui-1.10.2.custom.min.js")
    <script>
        "use strict";
        $(document).ready(function () {
            $(".datepicker-issueddate").datepicker({
                defaultDate: +7,
                showOtherMonths: true,
                autoSize: false,
                maxDate: new Date(),
                appendText: '<span class="help-block">(yyyy-mm-dd)</span>',
                dateFormat: "yy-mm-dd"
            });

        });

        function getLga(e) {
            var stateId = $(e).val();

            var currentRequest = null;
            var currentRequest = $.ajax({
                url: '@Url.Action("GetLGAId", "Dashboard")',
                dataType: 'json',
                type: 'POST',
                data: { StateId: stateId },
                beforeSend: function () {
                    if (currentRequest != null) {
                        currentRequest.abort();
                    }
                },
                success: function (msg) {
                    $("#addressform_LgaId").html("");
                    $.each(msg, function (index, element) {
                        $("#addressform_LgaId").append('<option  value="' + element.Value + '">' + element.Text + '</option>');
                    });
                },
                error: function (errmsg) { }
            });
        }

        function GetAllLGA(e) {
            getLga(e);

        }



    </script>
}


<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery-1.6.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/modernizr-1.7.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<style>
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>


