@model Project.Areas.Setup.Models.StoreManagementViewModel
@using Project.HtmlHelpers
@{
    ViewBag.Title = "Create New Slider";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.IsGreetings = "true";
}
@section Crumbs{
    <div class="crumbs">

        <ul class="breadcrumb" id="breadcrumbs">
            <li> <i class="icon-home"></i> <a href="@Url.Action("Index", "Dashboard", new { area="Admin"})">Dashboard</a> </li>
            <li class="current"> <a title="" href="javascript: return void(0)"></a>Create New Slider </li>
        </ul>
    </div>
}



<div class="row">
    <div class="col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4>
                    <i class="icon-reorder"></i>
                    New Slider
                </h4>
            </div>
            <div class="widget-content">
                @using (Html.BeginForm("NewSlider", "Store", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal row-border" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x=>x.store.ProcessInstaceId)



                    <div class="form-group">
                        @Html.Label("Caption One", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.StoreSliderform.CaptionOne, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StoreSliderform.CaptionOne, null, new { @style = "color:red" })

                         
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Caption Two", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.StoreSliderform.CaptionTwo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StoreSliderform.CaptionTwo, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Button Text", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.StoreSliderform.ButtonText, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StoreSliderform.ButtonText, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StoreSliderform.SliderPhoto, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(x => Model.StoreSliderform.SliderPhoto, new { type = "file" })
                            @*@Html.ValidationMessageFor(m => m.StoreSliderform.SliderPhoto, null, new { @style = "color:red" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Description", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.StoreSliderform.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StoreSliderform.Description, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Is Deleted?", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.CheckBoxFor(m => m.StoreSliderform.IsDeleted)
                        </div>
                    </div>

                    <div class="form-actions">
                        <a href="@Url.Action("SliderList", "Store", new {Id=Model.store.ProcessInstaceId, area = "Setup" })" class="btn btn-xs btn-warning">Back</a>
                        <input type="submit" class="btn btn-xs btn-success pull-right" value="Save" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>
